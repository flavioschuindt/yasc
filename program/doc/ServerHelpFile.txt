
************************************************************
Y A S C  --  ServerHelpFile   [Revision 1]
************************************************************

=== Calling Procedure ===

  ./yascS.exe <port>
    It is suggested to run from within directory ./program/.
    Use 'make runS' after changing the arguments to avoid writing the arguments all the time.

  Options:

  -v            verbose mode


=== Syntax ===

  Interpreter:
    The parsing function only takes into account commands separated by white space.


=== Commands ===

  'M'                   Prints information about every client logged on the server.
                        Format is: <IP address> [ stack element 1, stack element 2, ... ].

  'HELP'                Opens *this* document on the standard output.

  'F'                   Exits the program without prompt.


=== Output ===

  There are three kinds of output:

    >>       Internal errors that break functionality of the server. Program always exits after one of these.

    ::       Normal output; includes minor internal errors. Only present if -v flag is set on runtime.


=== Services ===

  All communications shall use a package of 9 bytes.
  The first one is a message: 'V', 'E' or 'I'.
  The second one is an integer in hexadecimal format.


  Calculator:

    This server deploys a threaded fully compliant integer calculator with correct handling of mathematical / computational exceptions.
    For each correctly handled command, it shall return a message 'V' and a number, being 0 for padding, and a numerical result for relevant commands.

    The calculator interface is possible through a socket in the following format:

      'I'                   Begins session: connection is established and a stack is issued.
                            The server cleans the stack if there is one already.

      'K'                   Ends session: stack is erased; connection is terminated. Returns nothing to the client.

      'P'                   Returns the stack size. Always succeeds.

      'T'                   Returns the top most value in the stack.

      'R'                   Returns end result and cleans the stack.
                            If the result is a partial one (i.e. there are still values in the stack), or if the stack is empty,
                            the server shall return an error AND clean the stack. To see partial results use 'T'!
                            In case of error, returns BIG_STACK or BAD_STACK.

      '+','-','*','/','%'   Integer basic operations. In case of error, returns OUT_OF_RANGE, and also DIV_0 for '/' and '%'.

      'D hex number'      Hexadecimal number is converted to integer and stored in the client's stack.


  Error codes:

    The server shall return these codes, defined in globalHeader.h, alongside with a message 'E' in case of ill usage:

    BAD_CMD           Nonconforming message received.
    OUT_OF_RANGE      Over/Underflow; arithmetic result is out of range (min/max range defined as INT_MIN/INT_MAX in limits.h).
    DIV_0             Division by 0 detected.
    BIG_STACK         Stack is bigger than expected for specified operation.
    BAD_STACK         Not enough operands for specified action.

    The server shall return these codes, defined in globalHeader.h, alongside with a message 'I' in case of internal error:

    [none defined]


(SCROLL UP ^)
************************************************************
