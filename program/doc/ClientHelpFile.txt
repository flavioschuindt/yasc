
************************************************************
Y A S C  --  ClientHelpFile   [Revision 1]
************************************************************

=== Calling Procedure ===

  ./yascC.exe <hostname> <port>
    It is suggested to run from within directory ./program/.
    Use 'make runC' after changing the arguments for simplicity.

  Options:

  -g            start in debug mode

  -f <file.txt> takes commands from file.txt instead of command line
                (.txt extension not enforced)

  -l            creates log.txt and runs silently
                (Critical errors are still posted on the command line rather than the log file)


=== Syntax ===

  Interpreter:
    The parsing function only takes into account blocks of characters separated by white space.

  Numbers:
    1) have to be integers
    2) shall not be preceded by 'D'
    3) may have an extra attribute, the signal, in the format '-###' or '+###' without spaces
    4) may be given in decimal format as '###'; hexadecimal as '0x###' or octal as '0###'

  Math:
    Server uses Reverse Polish Notation.
    Any inconformity will result in unwanted behaviour, with or without errors, depending on mathematical correctness.

  Special cases:
    ';' marks EVERYTHING written afterwards in the same line as comments to be discarded.

    In a command file, every command is issued as soon as it is read, so EXIT marks the end of the program
    regardless of any command or random text that comes afterwards.


=== Commands ===

  'I'                   Begins session: connection is established; server issues a stack.
                        Server cleans the stack if there is one already.

  'K'                   Ends session: server erases stack; connection is terminated.

  'P'                   Asks server for the stack size.
  'T'                   Asks server for the top most value in the stack.

  'R'                   Asks server for result and cleans the stack.
                        If the result is a partial one (i.e. there are still values in the stack) the server shall return an error.
                        To see partial results use 'T'.

  'G'                   Sets debug flag for extra output.

  '+','-','*','/','%'   Integer basic operations.

  'D' [deprecated]      Command is still issued internally whenever a number is found; direct usage results in parsing error.
                        Doesn't break the flow of the program, nor it is checked for good use (i.e. right before a number).

  'HELP'                Opens *this* document on the standard output, even if the -l flag is set.

  'EXIT'                Exits the program without prompt.


=== Output ===

  There are three kinds of output:

    >>       internal errors that break functionality of the client; doesn't get redirected or suppressed with any flag

    ::       normal output; includes minor internal errors, and external errors (i.e. server errors); gets redirected with -l flag

    DEBUG:   additional output when -g flag is set, or 'G' issued; gets redirected with -l flag


(SCROLL UP ^)
************************************************************
